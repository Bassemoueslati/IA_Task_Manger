# Script de test pour verifier l'installation complete
Write-Host "Test de l'installation Task Manager..." -ForegroundColor Green
Write-Host ""

$allGood = $true

# Test 1: Node.js
Write-Host "1. Test Node.js..." -ForegroundColor Yellow
$nodeVersion = node --version 2>$null
if ($nodeVersion) {
    Write-Host "   OK Node.js: $nodeVersion" -ForegroundColor Green
} else {
    Write-Host "   ERREUR Node.js non installe" -ForegroundColor Red
    $allGood = $false
}

# Test 2: NPM
Write-Host "2Ô∏è‚É£ Test NPM..." -ForegroundColor Yellow
$npmVersion = npm --version 2>$null
if ($npmVersion) {
    Write-Host "   ‚úÖ NPM: v$npmVersion" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå NPM non disponible" -ForegroundColor Red
    $allGood = $false
}

# Test 3: MongoDB
Write-Host "3Ô∏è‚É£ Test MongoDB..." -ForegroundColor Yellow
try {
    $mongoTest = Test-NetConnection -ComputerName localhost -Port 27017 -WarningAction SilentlyContinue
    if ($mongoTest.TcpTestSucceeded) {
        Write-Host "   ‚úÖ MongoDB accessible sur port 27017" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è  MongoDB non accessible (peut √™tre normal si pas encore d√©marr√©)" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   ‚ö†Ô∏è  Impossible de tester MongoDB" -ForegroundColor Yellow
}

# Test 4: Ollama
Write-Host "4Ô∏è‚É£ Test Ollama..." -ForegroundColor Yellow
try {
    $ollamaResponse = Invoke-RestMethod -Uri "http://localhost:11434/api/tags" -Method Get -TimeoutSec 3
    Write-Host "   ‚úÖ Ollama fonctionne" -ForegroundColor Green
    
    # V√©rifier les mod√®les install√©s
    if ($ollamaResponse.models -and $ollamaResponse.models.Count -gt 0) {
        Write-Host "   üì¶ Mod√®les install√©s:" -ForegroundColor Cyan
        foreach ($model in $ollamaResponse.models) {
            Write-Host "      ‚Ä¢ $($model.name)" -ForegroundColor Cyan
        }
    } else {
        Write-Host "   ‚ö†Ô∏è  Aucun mod√®le install√©" -ForegroundColor Yellow
        Write-Host "      üí° Ex√©cutez: ollama pull llama3.2:3b" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   ‚ö†Ô∏è  Ollama non disponible" -ForegroundColor Yellow
    Write-Host "      üí° Installez avec: .\install-ollama.ps1" -ForegroundColor Yellow
}

# Test 5: D√©pendances Backend
Write-Host "5Ô∏è‚É£ Test d√©pendances backend..." -ForegroundColor Yellow
if (Test-Path "backend\node_modules") {
    Write-Host "   ‚úÖ D√©pendances backend install√©es" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå D√©pendances backend manquantes" -ForegroundColor Red
    Write-Host "      üí° Ex√©cutez: cd backend && npm install" -ForegroundColor Yellow
    $allGood = $false
}

# Test 6: D√©pendances Frontend
Write-Host "6Ô∏è‚É£ Test d√©pendances frontend..." -ForegroundColor Yellow
if (Test-Path "frontend\node_modules") {
    Write-Host "   ‚úÖ D√©pendances frontend install√©es" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå D√©pendances frontend manquantes" -ForegroundColor Red
    Write-Host "      üí° Ex√©cutez: cd frontend && npm install" -ForegroundColor Yellow
    $allGood = $false
}

# Test 7: Configuration
Write-Host "7Ô∏è‚É£ Test configuration..." -ForegroundColor Yellow
if (Test-Path "backend\.env") {
    Write-Host "   ‚úÖ Fichier .env pr√©sent" -ForegroundColor Green
} else {
    Write-Host "   ‚ö†Ô∏è  Fichier .env manquant" -ForegroundColor Yellow
    Write-Host "      üí° Copiez backend\.env.example vers backend\.env" -ForegroundColor Yellow
}

# Test 8: Structure des fichiers
Write-Host "8Ô∏è‚É£ Test structure des fichiers..." -ForegroundColor Yellow
$requiredFiles = @(
    "backend\server.js",
    "backend\package.json",
    "frontend\package.json",
    "frontend\src\App.js",
    "README.md"
)

$missingFiles = @()
foreach ($file in $requiredFiles) {
    if (-not (Test-Path $file)) {
        $missingFiles += $file
    }
}

if ($missingFiles.Count -eq 0) {
    Write-Host "   ‚úÖ Tous les fichiers requis sont pr√©sents" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå Fichiers manquants:" -ForegroundColor Red
    foreach ($file in $missingFiles) {
        Write-Host "      ‚Ä¢ $file" -ForegroundColor Red
    }
    $allGood = $false
}

# R√©sum√©
Write-Host ""
Write-Host "üìä R√©sum√© du test:" -ForegroundColor White
if ($allGood) {
    Write-Host "üéâ Tous les tests critiques sont pass√©s!" -ForegroundColor Green
    Write-Host "üöÄ Vous pouvez d√©marrer l'application avec: .\start.ps1" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Certains probl√®mes ont √©t√© d√©tect√©s" -ForegroundColor Yellow
    Write-Host "üîß Corrigez les erreurs ci-dessus avant de d√©marrer" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üìñ Pour plus d'aide, consultez le README.md" -ForegroundColor Cyan