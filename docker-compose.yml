version: '3.8'

services:
  # Base de donn√©es MongoDB
  mongodb:
    image: mongo:6.0
    container_name: ai-task-manager-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ai_task_manager
    volumes:
      - mongodb_data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - ai-task-network

  # Backend Node.js + Express
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-task-manager-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/ai_task_manager?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      OLLAMA_URL: http://host.docker.internal:11434
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - ai-task-network

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-task-manager-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000
      CHOKIDAR_USEPOLLING: true
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - ai-task-network

volumes:
  mongodb_data:
    driver: local

networks:
  ai-task-network:
    driver: bridge